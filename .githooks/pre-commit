#!/bin/bash

# Simple Pre-commit Hook
# Basic validation for dotfiles

set -e

echo "üîç Checking files before commit..."

# Get staged files
staged_files=$(git diff --cached --name-only --diff-filter=ACM || true)

if [[ -z "$staged_files" ]]; then
    echo "‚úÖ No files to check"
    exit 0
fi

# Check for obvious sensitive data
echo "üîí Checking for sensitive data..."
if echo "$staged_files" | xargs grep -l -E "(password|secret|token|api[_-]?key)" 2>/dev/null; then
    echo "‚ùå Potential sensitive data found in staged files"
    echo "Please review and remove sensitive information"
    exit 1
fi

# Validate YAML files
yaml_files=$(echo "$staged_files" | grep -E '\.(yml|yaml)$' || true)
if [[ -n "$yaml_files" ]]; then
    echo "üìÑ Validating YAML files..."
    for file in $yaml_files; do
        if [[ -f "$file" ]]; then
            if command -v python3 >/dev/null 2>&1; then
                if python3 -c "import yaml; yaml.safe_load(open('$file'))" 2>/dev/null; then
                    echo "‚úÖ $file"
                else
                    echo "‚ùå $file has YAML syntax errors"
                    exit 1
                fi
            fi
        fi
    done
fi

# Validate JSON files
json_files=$(echo "$staged_files" | grep -E '\.json$' || true)
if [[ -n "$json_files" ]]; then
    echo "üìÑ Validating JSON files..."
    for file in $json_files; do
        if [[ -f "$file" ]]; then
            if command -v jq >/dev/null 2>&1; then
                if jq . "$file" >/dev/null 2>&1; then
                    echo "‚úÖ $file"
                else
                    echo "‚ùå $file has JSON syntax errors"
                    exit 1
                fi
            fi
        fi
    done
fi

echo "‚úÖ All checks passed!"